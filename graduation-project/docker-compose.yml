version: '3.9'
services:
  postgres:
    image: "postgres"
    ports:
      - "15432:5432"
    environment:
      POSTGRES_DB: productsDb
      POSTGRES_USER: productUser
      POSTGRES_PASSWORD: prodPwdDb
    volumes:
      - ./db-data/:/var/lib/postgresql/data/
      - /receipts/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U productUser -d productsDb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
    networks:
      - product-network

  keycloak:
    image: bitnami/keycloak
    container_name: keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: productsDb
      DB_USER: productUser
      DB_PASSWORD: prodPwdDb
      KEYCLOAK_HTTP_PORT: 8484
      KEYCLOAK_ADMIN: user
      KEYCLOAK_ADMIN_PASSWORD: bitnami
    ports:
      - "8484:8484"
    volumes:
      - ./keycloak:/opt/keycloak/data/
    restart: always
    depends_on:
      - postgres
    links:
      - "postgres:postgres"
    networks:
      - product-network

  products_app:
    build:
      context: receipts
      dockerfile: Dockerfile
    ports:
      - "9880:8181"
    depends_on:
      - postgres
      - keycloak
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/productsDb
      - SPRING_DATASOURCE_USERNAME=productUser
      - SPRING_DATASOURCE_PASSWORD=prodPwdDb
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER-URI=http://keycloak:8484/realms/product_realm
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_KEYCLOAK_ISSUER=http://keycloak:8484/realms/product_realm
    networks:
      - product-network

networks:
  product-network:
    driver: bridge

